export declare class IpregistryError extends Error {
    constructor(message: string);
}
export declare class ApiError extends IpregistryError {
    readonly code: string;
    readonly message: string;
    readonly resolution: string;
    constructor(code: string, message: string, resolution: string);
}
export declare class ClientError extends IpregistryError {
    constructor(message: string);
}
export declare class LookupError extends ApiError {
    constructor(code: string, message: string, resolution: string);
}
export declare enum ErrorCode {
    BAD_REQUEST = "BAD_REQUEST",
    DISABLED_API_KEY = "DISABLED_API_KEY",
    FORBIDDEN_IP = "FORBIDDEN_IP",
    FORBIDDEN_ORIGIN = "FORBIDDEN_ORIGIN",
    FORBIDDEN_IP_ORIGIN = "FORBIDDEN_IP_ORIGIN",
    INTERNAL = "INTERNAL",
    INSUFFICIENT_CREDITS = "INSUFFICIENT_CREDITS",
    INVALID_API_KEY = "INVALID_API_KEY",
    INVALID_FILTER_SYNTAX = "INVALID_FILTER_SYNTAX",
    INVALID_IP_ADDRESS = "INVALID_IP_ADDRESS",
    MISSING_API_KEY = "MISSING_API_KEY",
    RESERVED_IP_ADDRESS = "RESERVED_IP_ADDRESS",
    TOO_MANY_IPS = "TOO_MANY_IPS",
    TOO_MANY_REQUESTS = "TOO_MANY_REQUESTS",
    TOO_MANY_USER_AGENTS = "TOO_MANY_USER_AGENTS"
}
export declare function isError(object: any): boolean;
export declare function isApiError(object: any): boolean;
//# sourceMappingURL=errors.d.ts.map