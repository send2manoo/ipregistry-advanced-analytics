"use strict";
/*
 * Copyright 2019 Ipregistry (https://ipregistry.co).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.isApiError = exports.isError = exports.ErrorCode = exports.LookupError = exports.ClientError = exports.ApiError = exports.IpregistryError = void 0;
var IpregistryError = /** @class */ (function (_super) {
    __extends(IpregistryError, _super);
    function IpregistryError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return IpregistryError;
}(Error));
exports.IpregistryError = IpregistryError;
var ApiError = /** @class */ (function (_super) {
    __extends(ApiError, _super);
    function ApiError(code, message, resolution) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.message = message;
        _this.resolution = resolution;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return ApiError;
}(IpregistryError));
exports.ApiError = ApiError;
var ClientError = /** @class */ (function (_super) {
    __extends(ClientError, _super);
    function ClientError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return ClientError;
}(IpregistryError));
exports.ClientError = ClientError;
var LookupError = /** @class */ (function (_super) {
    __extends(LookupError, _super);
    function LookupError(code, message, resolution) {
        return _super.call(this, code, message, resolution) || this;
    }
    return LookupError;
}(ApiError));
exports.LookupError = LookupError;
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["BAD_REQUEST"] = "BAD_REQUEST";
    ErrorCode["DISABLED_API_KEY"] = "DISABLED_API_KEY";
    ErrorCode["FORBIDDEN_IP"] = "FORBIDDEN_IP";
    ErrorCode["FORBIDDEN_ORIGIN"] = "FORBIDDEN_ORIGIN";
    ErrorCode["FORBIDDEN_IP_ORIGIN"] = "FORBIDDEN_IP_ORIGIN";
    ErrorCode["INTERNAL"] = "INTERNAL";
    ErrorCode["INSUFFICIENT_CREDITS"] = "INSUFFICIENT_CREDITS";
    ErrorCode["INVALID_API_KEY"] = "INVALID_API_KEY";
    ErrorCode["INVALID_FILTER_SYNTAX"] = "INVALID_FILTER_SYNTAX";
    ErrorCode["INVALID_IP_ADDRESS"] = "INVALID_IP_ADDRESS";
    ErrorCode["MISSING_API_KEY"] = "MISSING_API_KEY";
    ErrorCode["RESERVED_IP_ADDRESS"] = "RESERVED_IP_ADDRESS";
    ErrorCode["TOO_MANY_IPS"] = "TOO_MANY_IPS";
    ErrorCode["TOO_MANY_REQUESTS"] = "TOO_MANY_REQUESTS";
    ErrorCode["TOO_MANY_USER_AGENTS"] = "TOO_MANY_USER_AGENTS";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
function isError(object) {
    return object && 'message' in object;
}
exports.isError = isError;
function isApiError(object) {
    return isError(object) && 'code' in object;
}
exports.isApiError = isApiError;
//# sourceMappingURL=errors.js.map