"use strict";
/*
 * Copyright 2019 Ipregistry (https://ipregistry.co).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.IpregistryOptions = exports.HostnameOption = exports.FilterOption = exports.IpregistryOption = void 0;
var IpregistryOption = /** @class */ (function () {
    function IpregistryOption(name, value) {
        this.name = name;
        this.value = value;
    }
    return IpregistryOption;
}());
exports.IpregistryOption = IpregistryOption;
var FilterOption = /** @class */ (function (_super) {
    __extends(FilterOption, _super);
    function FilterOption(expression) {
        return _super.call(this, 'fields', expression) || this;
    }
    return FilterOption;
}(IpregistryOption));
exports.FilterOption = FilterOption;
var HostnameOption = /** @class */ (function (_super) {
    __extends(HostnameOption, _super);
    function HostnameOption(hostname) {
        return _super.call(this, 'hostname', String(hostname)) || this;
    }
    return HostnameOption;
}(IpregistryOption));
exports.HostnameOption = HostnameOption;
var IpregistryOptions = /** @class */ (function () {
    function IpregistryOptions() {
    }
    IpregistryOptions.filter = function (fields) {
        return new FilterOption(fields);
    };
    IpregistryOptions.hostname = function (hostname) {
        return new HostnameOption(hostname);
    };
    IpregistryOptions.from = function (name, value) {
        return new IpregistryOption(name, value);
    };
    return IpregistryOptions;
}());
exports.IpregistryOptions = IpregistryOptions;
//# sourceMappingURL=options.js.map